// <auto-generated />
using System;
using DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataAccess.Migrations
{
    [DbContext(typeof(EfDbContext))]
    [Migration("20210905201959_inir")]
    partial class inir
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Entities.ContactInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<string>("InfoContext")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("ContactInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e98a2570-92e7-435e-a289-e5702987fa8e"),
                            EmailAddress = "elifodabasi14@gmail.com",
                            InfoContext = "Bilgi",
                            Location = "Ankara",
                            PersonId = new Guid("e98a2570-92e7-435e-a289-e5702987fa8e"),
                            PhoneNumber = "05077217160"
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e98a2570-92e7-435e-a289-e5702987fa8e"),
                            Company = "Odabaşı Soft",
                            Name = "Elif",
                            Surname = "Odabaşıoğlu"
                        });
                });

            modelBuilder.Entity("Entities.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContactInfoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ReportDemandDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ReportStatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("ReportStatusId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e98a2570-92e7-435e-a289-e5702987fa8e"),
                            ContactInfoId = new Guid("e98a2570-92e7-435e-a289-e5702987fa8e"),
                            ReportDemandDate = new DateTime(2021, 9, 5, 23, 19, 58, 529, DateTimeKind.Local).AddTicks(8282),
                            ReportStatusId = 1
                        });
                });

            modelBuilder.Entity("Entities.ReportStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReportStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Hazırlanıyor"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Tamamlandı"
                        });
                });

            modelBuilder.Entity("Entities.ContactInfo", b =>
                {
                    b.HasOne("Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Entities.Report", b =>
                {
                    b.HasOne("Entities.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.ReportStatus", "ReportStatus")
                        .WithMany()
                        .HasForeignKey("ReportStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactInfo");

                    b.Navigation("ReportStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
